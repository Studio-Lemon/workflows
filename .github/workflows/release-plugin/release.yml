name: Release

on:
    workflow_dispatch: {}
    release:
        types: [published]
    # Allow this workflow to be called from another repo (reusable workflow)
    workflow_call:
        inputs:
            plugin_name:
                description: 'Logical plugin name (e.g. lemon-woo). Workflow will append .zip if needed.'
                required: false
                type: string
                default: 'plugin'

jobs:
    create_zip:
        name: Build release zip
        runs-on: ubuntu-latest
        env:
            PLUGIN_DIR: .
            ZIP_NAME_RAW: ${{ inputs.plugin_name }}
            BUILD_COMMANDS: |
                npm install
                npm run build
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Build plugin
              working-directory: ${{ env.PLUGIN_DIR }}
              run: |
                  set -e
                  echo "Running build commands in $(pwd)"
                  bash -lc "$BUILD_COMMANDS"

            - name: Create zip archive
              working-directory: ${{ env.PLUGIN_DIR }}
              run: |
                  set -e
                  # ensure zip name ends with .zip
                  ZIP_NAME="$ZIP_NAME_RAW"
                  case "$ZIP_NAME" in
                    *.zip) ;;
                    *) ZIP_NAME="$ZIP_NAME.zip" ;;
                  esac
                  echo "Creating archive: $ZIP_NAME for plugin dir: $PLUGIN_DIR"
                  TMPDIR="assemble_dir"
                  rm -rf "$TMPDIR"
                  mkdir -p "$TMPDIR"
                  git archive --format=tar HEAD | tar -x -C "$TMPDIR"
                  # include dist automatically if present
                  if [ -d "dist" ]; then
                    cp -r "dist" "$TMPDIR/"
                  fi
                  cd "$TMPDIR"
                  zip -r "../$ZIP_NAME" .
                  mv "../$ZIP_NAME" ../

            - name: Release (create GitHub release and upload assets)
              if: startsWith(github.ref, 'refs/tags/')
              uses: softprops/action-gh-release@v2
              with:
                  files: ${{ env.ZIP_NAME_RAW }}.zip
