name: Release

on:
    workflow_dispatch: {}
    release:
        types: [published]
    # Allow this workflow to be called from another repo (reusable workflow)
    workflow_call:
        inputs:
            plugin_name:
                description: 'Logical plugin name (e.g. lemon-woo). Workflow will append .zip if needed.'
                required: true
                type: string
                default: 'plugin'

jobs:
    create_zip:
        name: Build release zip
        runs-on: ubuntu-latest
        env:
            PLUGIN_DIR: .
            PLUGIN_NAME: ${{ inputs.plugin_name }}
            BUILD_COMMANDS: |
                npm install
                npm run build:ci
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js and cache npm
              uses: actions/setup-node@v4
              with:
                # Use an LTS Node version; adjust if your project needs a different one
                node-version: '22'
                # Enable built-in npm caching
                cache: 'npm'
                # Cache key should update when the lockfile changes
                cache-dependency-path: ${{ env.PLUGIN_DIR }}/package-lock.json

            - name: Build plugin
              working-directory: ${{ env.PLUGIN_DIR }}
              run: |
                  set -e
                  echo "Running build commands in $(pwd)"
                  bash -lc "$BUILD_COMMANDS"

            - name: Create zip archive
              working-directory: ${{ env.PLUGIN_DIR }}
              run: |
                git archive --format=zip HEAD -o $PLUGIN_NAME.zip
                mkdir $PLUGIN_NAME
                unzip $PLUGIN_NAME.zip -d $PLUGIN_NAME
                rm $PLUGIN_NAME.zip

                # include dist automatically if present
                if [ -d "dist" ]; then
                  cp -r dist $PLUGIN_NAME
                fi

                # include BLOCKS automatically if present
                if [ -d "blocks" ]; then
                  cp -r blocks $PLUGIN_NAME
                fi

                cp -r dist $PLUGIN_NAME
                zip -r $PLUGIN_NAME.zip $PLUGIN_NAME

            - name: Release (create GitHub release and upload assets)
              if: startsWith(github.ref, 'refs/tags/')
              uses: softprops/action-gh-release@v2
              with:
                  files: ${{ env.PLUGIN_NAME }}.zip
