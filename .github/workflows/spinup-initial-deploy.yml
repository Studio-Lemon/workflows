name: Initial deploy

on:
  # Allow this workflow to be called from another repo (reusable workflow)
  workflow_call:
    inputs:
      theme:
        description: 'Theme name (e.g. lemon-theme) - if not provided, will auto-detect from web/app/themes directory'
        required: false
        type: string
      php_version:
        description: 'PHP version to use'
        required: false
        type: string
        default: '8.3'
      node_version:
        description: 'Node version to use'
        required: false
        type: string
        default: 'lts/*'
    secrets:
      SSH_KEY:
        description: 'SSH private key for deployment'
        required: true
      SSH_USER:
        description: 'SSH username for deployment'
        required: true
      SSH_HOST:
        description: 'SSH host for deployment'
        required: true
      SATISPRESS_TOKEN:
        description: 'Token for Satispress authentication (optional - will use workflow repo token if not provided)'
        required: false

    
jobs:
  build_and_deploy_staging:
    name: Build and Deploy to Staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Auto-detect theme name
        id: detect-theme
        run: |
          if [ -n "${{ inputs.theme }}" ]; then
            echo "Using provided theme: ${{ inputs.theme }}"
            echo "THEME_NAME=${{ inputs.theme }}" >> $GITHUB_OUTPUT
          else
            echo "Auto-detecting theme from web/app/themes directory..."
            if [ -d "web/app/themes" ]; then
              # Get the first directory in web/app/themes (excluding . and ..)
              THEME_NAME=$(find web/app/themes -maxdepth 1 -type d ! -path web/app/themes | head -n 1 | xargs basename)
              if [ -n "$THEME_NAME" ]; then
                echo "Auto-detected theme: $THEME_NAME"
                echo "THEME_NAME=$THEME_NAME" >> $GITHUB_OUTPUT
              else
                echo "Error: No theme directory found in web/app/themes"
                exit 1
              fi
            else
              echo "Error: web/app/themes directory not found"
              exit 1
            fi
          fi

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version || '8.3' }}
   
      - name: Install dependencies
        env:
          SATISPRESS_TOKEN: ${{ secrets.SATISPRESS_TOKEN || secrets.WORKFLOW_SATISPRESS_TOKEN }}
        run: |
          if [ -n "$SATISPRESS_TOKEN" ]; then
            composer config -a -g http-basic.packagist.studiolemon.nl \
            $SATISPRESS_TOKEN satispress
          else
            echo "Warning: No SATISPRESS_TOKEN found, skipping Satispress authentication"
          fi
          composer install --prefer-dist --no-progress
      - name: rsync composer
        uses: burnett01/rsync-deployments@6.0.0
        with:
         switches: -avzr --exclude=".*" --exclude="babel.config.js"  --exclude="phpcs.xml" --exclude="*.code-workspace" --exclude="web/app/themes/${{ steps.detect-theme.outputs.THEME_NAME }}"
         remote_path: files
         remote_host: ${{ secrets.SSH_HOST }}
         remote_port: 22
         remote_user: ${{ secrets.SSH_USER }}
         remote_key: ${{ secrets.SSH_KEY }}    
      - name: Node Build
        uses: actions/setup-node@v4  
        with:
         node-version: ${{ inputs.node_version || 'lts/*' }}
         cache: 'yarn'
         cache-dependency-path: web/app/themes/${{ steps.detect-theme.outputs.THEME_NAME }}/yarn.lock
      - run: |
          cd ./web/app/themes/${{ steps.detect-theme.outputs.THEME_NAME }}
          cp ./resources/assets/config.production.json ./resources/assets/config.json
          yarn install
          yarn run production
      - name: rsync deployments
        uses: burnett01/rsync-deployments@6.0.0
        with:
         switches: -avzr --delete --delete-excluded --exclude=".*" --exclude="babel.config.js" --exclude="package.json" --exclude="phpcs.xml.dist" --exclude="phpstan.neon.dist" --exclude="*.md" --exclude="yarn.lock" --exclude="package.lock" --exclude="node_modules"
         remote_path: files/web/app/themes/
         path: web/app/themes/${{ steps.detect-theme.outputs.THEME_NAME }}
         remote_host: ${{ secrets.SSH_HOST }}
         remote_port: 22
         remote_user: ${{ secrets.SSH_USER }}
         remote_key: ${{ secrets.SSH_KEY }}
  clear_cache:
    name: Clear Cache
    runs-on: ubuntu-latest
    needs: build_and_deploy_staging
    steps:
      - name: Login and clear cache
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: 'cd files && wp spinupwp cache purge-site'
